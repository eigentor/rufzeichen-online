<?php


function rufzeichen_queue_menu() {
  $items['admin/config/content/rufzeichen_queue/showquery'] = [
    'title' => 'Debug Query for queue',
    'page callback' => 'rufzeichen_queue_show_query',
    'access callback' => TRUE,
    'expanded' => TRUE,
  ];
  return $items;
}

function rufzeichen_queue_show_query() {
  $content_type = 'news';


  $result = db_query('
    SELECT nr.vid, sub.nid FROM
    (SELECT n.nid, n.vid
    FROM {node} n
    WHERE n.type = :content_type) AS sub
    INNER JOIN {node_revision} nr ON sub.nid = nr.nid and sub.vid <> nr.vid
    ORDER BY nr.vid ASC
    ', [
    ':content_type' => $content_type,
  ]);

  $nid_vid = [];
  foreach ($result as $row) {
    $nid_vid[] = ['nid' => $row->nid, 'vid' => $row->vid];
  }

  $nid_vid_chunked = (array_chunk($nid_vid, 100));

  // Create the directory for the Excel export
  $destination = 'sites/default/files/asin-export';

  if (!file_exists($destination)) {
    mkdir($destination, 0755, true);
  }

  $filename = 'asins.csv';
  $file = $destination . '/' . $filename;

//  $addstring = 'Blackbird spyplane quinoa bodega boys bespoke knausgaard, lumbersexual vibecession street art seitan synth humblebrag intelligentsia listicle pok pok. Artisan tonx gentrify humblebrag wolf.';
//
//  if(file_exists($file)) {
//  $current = file_get_contents($file);
//    $current .= $addstring;
//    file_put_contents($file, $current);
//  } else {
//    file_put_contents($file, $addstring);
//  }

  foreach($nid_vid_chunked as $chunk) {

    $data_chunk = '';

    // Bei unseren Daten: Was, wenn asin_changes leer ist?
    foreach($chunk as $item) {
      $data_chunk .= '"' . $item['nid'] . '"';
      $data_chunk .= ';';
      $data_chunk .= '"' . $item['vid'] . '"';
      $data_chunk .=  "\n";
    }

    if(file_exists($file)) {
      $current = file_get_contents($file);
      $current .= $data_chunk;
      file_put_contents($file, $current);
    } else {
      $header = '"' . 'NID' . '"';
      $header .= ';';
      $header .= '"' . 'VID' . '"';
      $header .=  "\n";
      $data_chunk_with_header = $header . $data_chunk;
      file_put_contents($file, $data_chunk_with_header);
    }

  }




  //Filter out Quotes and double quotes and other chars that might confuse excel from the array before export
  function filterData(&$string){
    $string = str_replace('"', "", str_replace("'", "", $string));
    return $string;
  }

 /* // Write the nids into the queue
  foreach ($nid_vid_chunked as $chunk) {

    if (count($chunk) !== 0) {
      //    $start += $count/100;
      $queue = DrupalQueue::get('rufzeichen_queue_main');
      $count = $queue->numberOfItems();
      $queue->createQueue();
      $queue->createItem($chunk);
      //    $queue->claimItem($start + (60 * 5));
      //    rq_collect_revision_vids($count);
    }
  }*/

  $olli = 25;

  return [
    '#markup' => t('@count results found.', ['@count' => count($nid_vid)]),
  ];

}

//function rufzeichen_queue_cronapi($op, $job = NULL) {
//  $items = [];
//  $items['revision_delete_queue_main'] = [
//    'description' => 'Collect revisions to delete',
//    'rule' => '*/15 * * * *', // every 15 minutes
//    'arguments' => [100],
//    'callback' => 'rq_collect_revision_vids',
//  ];
//
//  return $items;
//}

function rq_collect_revision_vids($count) {
  static $start;
  if (empty($start)) {
    $start = 0;
  }
  $content_type = 'news';

  $result = db_query('
    SELECT nr.vid FROM
    (SELECT n.nid, n.vid
    FROM {node} n
    WHERE n.type = :content_type) AS sub
    INNER JOIN {node_revision} nr ON sub.nid = nr.nid and sub.vid <> nr.vid
    ORDER BY nr.vid ASC
    LIMIT 100

    ', [
    ':content_type' => $content_type,
  ]);

  $revision_ids = [];
  foreach ($result as $row) {
    $revision_ids[] = $row->vid;
  }

  $oppa = 'Parkbank';

  if (count($revision_ids) !== 0) {
    $start += $count / 100;
    $queue = DrupalQueue::get('revision_delete_queue_main');
    $count = $queue->numberOfItems();
    $queue->createQueue();
    $queue->createItem($revision_ids);
    $queue->claimItem($start + (60 * 5));
    $samma = 'wuppi';
    rq_collect_revision_vids($count);
  }
  else {
    return;
  }
}
