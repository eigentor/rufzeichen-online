<?php


function rufzeichen_queue_menu() {
  $items['admin/config/content/rufzeichen_queue/showquery'] = [
    'title' => 'Debug Query for queue',
    'page callback' => 'rufzeichen_queue_show_query',
    'access callback' => TRUE,
    'expanded' => TRUE,
  ];
  return $items;
}

function rufzeichen_queue_show_query() {




  $nid_vid_chunked = rq_get_nid_vid();


  // Save the CSV file to the server.
//  rq_save_asin_csv($nid_vid_chunked);

  // Write the nids into the queue
  foreach ($nid_vid_chunked as $chunk) {

    if (count($chunk) !== 0) {
      //      $start += $count;
      $queue = DrupalQueue::get('rufzeichen_queue_main');
      //      $count = $queue->numberOfItems();
      if(!isset($queue)) {
        $queue->createQueue();
      }

      $queue->createItem($chunk);
      $count = $queue->numberOfItems();
      //      $queue->claimItem($start + (10));
    }
  }



  //Filter out Quotes and double quotes and other chars that might confuse excel from the array before export
  function filterData(&$string){
    $string = str_replace(['"', "'", "\n", "\r\n"], "", $string);
    return $string;
  }



  $olli = 25;

  return [
    '#markup' => t('@count results found.', ['@count' => count($nid_vid)]),
  ];
}

function rq_get_nid_vid() {

  $content_type = 'news';

  $result = db_query('
    SELECT nr.vid, sub.nid FROM
    (SELECT n.nid, n.vid
    FROM {node} n
    WHERE n.type = :content_type) AS sub
    INNER JOIN {node_revision} nr ON sub.nid = nr.nid and sub.vid <> nr.vid
    ORDER BY nr.vid ASC
    ', [
    ':content_type' => $content_type,
  ]);

  $nid_vid = [];
  foreach ($result as $row) {
    $nid_vid[] = ['nid' => $row->nid, 'vid' => $row->vid];
  }

  $nid_vid_chunked = (array_chunk($nid_vid, 100));

  return $nid_vid_chunked;
}

/*
 * Write the nids and vids to the queue so we can later process them.
 */
function rq_fill_queue() {

  $nid_vid_chunked = rq_get_nid_vid();

  static $start;
  if (empty($start)) {
    $start = 0;
  }
   // Write the nids into the queue
  foreach ($nid_vid_chunked as $chunk) {

    if (count($chunk) !== 0) {
//      $start += $count;
      $queue = DrupalQueue::get('rufzeichen_queue_main');
//      $count = $queue->numberOfItems();
      $queue->createQueue();
      $queue->createItem($chunk);
      $count = $queue->numberOfItems();
//      $queue->claimItem($start + (10));
    }
  }
}

/**
 * Implements hook_cron_queue_info().
 * This hook calls the queue worker. "Time" defines how long
 * the worker can claim a chunk of work, before it has to give it back
 * (if it is not finished).
 */
function rufzeichen_cron_cron_queue_info() {
  $queues = array();
  $queues['rufzeichen_queue_main'] = array(
    // Queue worker function.
    'worker callback' => 'rq_save_asin_csv',
    // The function will be work 10 seconds.
    'time' => 30,
  );
  return $queues;
}

function rq_save_asin_csv($nid_vid_chunked) {
  // Create the directory for the Excel export
  $destination = 'sites/default/files/asin-export';

  if (!file_exists($destination)) {
    mkdir($destination, 0755, true);
  }
  $filename = 'asins.csv';
  $file = $destination . '/' . $filename;

  foreach($nid_vid_chunked as $chunk) {

    $data_chunk = '';

    // Bei unseren Daten: Was, wenn asin_changes leer ist?
    foreach($chunk as $item) {
      $data_chunk .= '"' . $item['nid'] . '"';
      $data_chunk .= ';';
      $data_chunk .= '"' . $item['vid'] . '"';
      $data_chunk .=  "\n";
    }

    if(file_exists($file)) {
      $current = file_get_contents($file);
      $current .= $data_chunk;
      file_put_contents($file, $current);
    } else {
      $header = '"' . 'NID' . '"';
      $header .= ';';
      $header .= '"' . 'VID' . '"';
      $header .=  "\n";
      $data_chunk_with_header = $header . $data_chunk;
      file_put_contents($file, $data_chunk_with_header);
    }

  }
}


function rufzeichen_queue_cronapi($op, $job = NULL) {
  $items = [];
  $items['revision_delete_queue_main'] = [
    'description' => 'Save nids and vids to Queue',
    'rule' => ' 0 3 * * *', // every 15 minutes
    'arguments' => [100],
    'callback' => 'rq_fill_queue',
  ];

  return $items;
}

function rq_collect_revision_vids($count) {
  static $start;
  if (empty($start)) {
    $start = 0;
  }
  $content_type = 'news';

  $result = db_query('
    SELECT nr.vid FROM
    (SELECT n.nid, n.vid
    FROM {node} n
    WHERE n.type = :content_type) AS sub
    INNER JOIN {node_revision} nr ON sub.nid = nr.nid and sub.vid <> nr.vid
    ORDER BY nr.vid ASC
    LIMIT 100

    ', [
    ':content_type' => $content_type,
  ]);

  $revision_ids = [];
  foreach ($result as $row) {
    $revision_ids[] = $row->vid;
  }

  $oppa = 'Parkbank';

  if (count($revision_ids) !== 0) {
    $start += $count / 100;
    $queue = DrupalQueue::get('revision_delete_queue_main');
    $count = $queue->numberOfItems();
    $queue->createQueue();
    $queue->createItem($revision_ids);
    $queue->claimItem($start + (60 * 5));
    $samma = 'wuppi';
    rq_collect_revision_vids($count);
  }
  else {
    return;
  }
}
