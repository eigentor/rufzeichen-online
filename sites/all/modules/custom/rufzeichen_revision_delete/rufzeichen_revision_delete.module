<?php

/**
 * Implements hook_permission().
 */
function rufzeichen_revision_delete_permission() {
  return [
    'access_revision_delete_form' => [
      'title' => t('Access revision delete form'),
      'description' => t('Access the custom form for revision deletion'),
    ],
  ];
}

function rufzeichen_revision_delete_menu() {
  $items['admin/config/content/rufzeichen_revision_delete'] = [
    'title' => 'Rufzeichen revision delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['rufzeichen_revision_delete_form'],
    'access arguments' => ['access_revision_delete_form'],
  ];
  $items['admin/config/content/rufzeichen_revision_delete/showquery'] = [
    'title' => 'Debug Query for revision deleten',
    'page callback' => 'rufzeichen_rev_show_query',
    'access arguments' => ['access_revision_delete_form'],
  ];
  return $items;
}


function rufzeichen_revision_delete_form($form, &$form_state) {
  $form['description'] = [
    '#type' => 'item',
    '#title' => t('Delete old revisions that are no longer needed'),
  ];
  $form['select_active'] = [
    '#type' => 'checkbox',
    '#title' => t('Delete Revisions now'),
  ];
  $form['submit'] = [
    '#type' => 'submit',
    '#value' => t('Start deleting'),
  ];
  return $form;
}

function rufzeichen_revision_delete_form_submit($form, &$form_state) {
  if ($form_state['values']['select_active'] == 1) {
    batch_set(rufzeichen_revision_delete_batch_set());
  } else {
    drupal_set_message('You have to select the checkbox "Delete Revisions now" to start deleting.');
  }
}

function rufzeichen_revision_delete_batch_set() {
  $content_type = 'news';

  drupal_set_message(t('Starting to delete revisions for content type news.', ['@content_type' => $content_type]), 'status');

  //  @TODO: Create query to get revisions to delete.

  $name_node_revision_table = 'node_revision';

//  $result = db_query("SELECT vid from {node_revision} WHERE bundle = news");

  $result = db_query('SELECT nr.nid, nr.vid, nr.timestamp
    FROM {node_revision} nr
    INNER JOIN {node} n ON n.nid = nr.nid and n.vid <> nr.vid
    WHERE n.type = :content_type
    ORDER BY nr.timestamp ASC
    LIMIT 500', array(
    ':content_type' => $content_type,
  ))
  ;

  $candidates = array();
  foreach ($result as $row) {
    $candidates[] = (array) $row;
  }

  $revisions = [];

  foreach ($revisions as $revision) {
    $operations[] = ['rufzeichen_revisions_do_delete', [$revision]];
  }

  $batch = [
    'operations' => $operations,
    'finished' => 'rufzeichen_rev_delete_finished',
  ];

  return $batch;
}

function rufzeichen_revisions_do_delete($revision, &$context) {
  // @TODO: Remove this when making the module production-ready
  // Slow down the execution on purpose, so we can watch what happens with the progressbar.
  sleep(2);

  $context['results'][] = $revision;
  // Optional message displayed under the progressbar.
  $context['message'] = t('Processing revision no "@revision"', ['@revision' => $revision]);

  node_revision_delete($revision);
}

function rufzeichen_rev_delete_finished($success, $results, $operations) {
  if ($success) {
    // @TODO: Add log message for every node ID that had revisions deleted.
    drupal_set_message((t('@count revisions deleted.', ['@count' => count($results)])));
  }
  else {
    $error_operation = reset($operations);
    drupal_set_message(t('An error occurred while processing @operation with arguments : @args', [
      '@operation' => $error_operation[0],
      '@args' => print_r($error_operation[0], TRUE),
    ]), 'error');
  }
}

function rufzeichen_rev_show_query() {
  $content_type = 'news';

  $result = db_query('SELECT nr.nid, nr.vid, nr.timestamp
    FROM {node_revision} nr
    INNER JOIN {node} n ON n.nid = nr.nid and n.vid <> nr.vid
    WHERE n.type = :content_type
    ORDER BY nr.timestamp DESC
    LIMIT 500', array(
    ':content_type' => $content_type,
  ))
  ;

  $candidates = array();
  foreach ($result as $row) {
    $candidates[] = (array) $row;
  }

  $peter = 2;

  return [
    '#markup' => t('@count results found.',['@count' =>count($candidates)]),
  ];
}
